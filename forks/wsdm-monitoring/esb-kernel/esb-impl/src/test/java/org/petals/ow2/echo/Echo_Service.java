
/*
 * 
 */

package org.petals.ow2.echo;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.1.4
 * Wed Jul 29 11:02:01 CEST 2009
 * Generated source version: 2.1.4
 * 
 */


@WebServiceClient(name = "echo", 
                  wsdlLocation = "./src/test/resources/wsdl/echo.wsdl",
                  targetNamespace = "http://ow2.petals.org/echo/") 
public class Echo_Service extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://ow2.petals.org/echo/", "echo");
    public final static QName EchoSOAP = new QName("http://ow2.petals.org/echo/", "echoSOAP");
    static {
        URL url = null;
        try {
            url = new URL("./src/test/resources/wsdl/echo.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from ./src/test/resources/wsdl/echo.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public Echo_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Echo_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Echo_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns Echo
     */
    @WebEndpoint(name = "echoSOAP")
    public Echo getEchoSOAP() {
        return super.getPort(EchoSOAP, Echo.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Echo
     */
    @WebEndpoint(name = "echoSOAP")
    public Echo getEchoSOAP(WebServiceFeature... features) {
        return super.getPort(EchoSOAP, Echo.class, features);
    }

}
